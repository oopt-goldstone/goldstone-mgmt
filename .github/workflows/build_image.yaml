on:
  workflow_call:
    inputs:
      repo:
        required: false
        type: string
        default: ghcr.io/oopt-goldstone/mgmt
      file:
        required: true
        type: string
      targets:
        required: true
        type: string
      build-args:
        required: false
        type: string
      platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64
      outputs:
        required: false
        type: string
        default: "type=registry"
    outputs:
      tags:
        value: ${{ jobs.push.outputs.tags }}
      labels:
        value: ${{ jobs.push.outputs.labels }}

jobs:
  push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{fromJson(inputs.targets)}}

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      -
        name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta for builder
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: "${{ inputs.repo }}/${{ matrix.target }}"
      -
        name: Build agent
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          outputs: ${{ inputs.outputs }}
          file: ${{ inputs.file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ matrix.target }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build-args }}
