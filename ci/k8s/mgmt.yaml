apiVersion: v1
kind: Service
metadata:
    name: netopeer2
spec:
    selector:
        app: gs-mgmt
    ports:
    - protocol: TCP
      port: 830

---

apiVersion: v1
kind: ServiceAccount
metadata:
    name: gs-mgmt
    namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: gs-mgmt
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
subjects:
- kind: ServiceAccount
  name: gs-mgmt
  namespace: default

---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: gs-mgmt-sonic-svc
    namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: gs-mgmt-sonic-svc
    namespace: default
roleRef:
  kind: ClusterRole
  name: usonic-manage
  apiGroup: rbac.authorization.k8s.io
subjects:
 - kind: ServiceAccount
   name: gs-mgmt-sonic-svc
   namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: usonic-manage
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get","update","patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments"]
  verbs: ["*"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["*"]

---

apiVersion: batch/v1
kind: Job
metadata:
    name: prep-gs-mgmt
spec:
    template:
        spec:
            restartPolicy: Never
            initContainers: # run prep-sysrepo and prep-np sequentially
            - name: prep-sysrepo
              image: docker.io/gs-test/gs-mgmt-debug:latest
              imagePullPolicy: IfNotPresent
              command: ["reload.sh"]
              volumeMounts:
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
            - name: prep-np
              image: docker.io/gs-test/gs-mgmt-netopeer2:latest
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', '$NP2/setup.sh && $NP2/merge_hostkey.sh && $NP2/merge_config.sh']
              env:
              - name: NP2
                value: /usr/local/share/netopeer2/scripts
              - name: NP2_MODULE_OWNER
                value: root
              - name: NP2_MODULE_GROUP
                value: root
              - name: NP2_MODULE_PERMS
                value: "600"
              - name: NP2_MODULE_DIR
                value: /usr/local/share/yang/modules/netopeer2
              volumeMounts:
              - mountPath: /dev/shm
                name: shm
              - mountPath: /var/lib/sysrepo
                name: sysrepo
            containers:
            - name: job-done
              image: docker.io/gs-test/gs-mgmt-debug:latest
              imagePullPolicy: IfNotPresent
              command: ["sysrepoctl", "-l"]
              volumeMounts:
              - mountPath: /dev/shm
                name: shm
              - mountPath: /var/lib/sysrepo
                name: sysrepo
            volumes:
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: gs-mgmt-np2
    labels:
        app: gs-mgmt
spec:
    selector:
        matchLabels:
            app: gs-mgmt-np2
    template:
        metadata:
            labels:
                app: gs-mgmt-np2
        spec:
            serviceAccountName: gs-mgmt
            initContainers:
            - name: wait-prep
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=complete', 'job/prep-gs-mgmt']
            containers:
            - name: netopeer2
              image: docker.io/gs-test/gs-mgmt-netopeer2:latest
              imagePullPolicy: IfNotPresent
              command: ['netopeer2-server', '-d', '-v', '2']
              volumeMounts:
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
            volumes:
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: gs-mgmt-tai
    labels:
        app: gs-mgmt
spec:
    selector:
        matchLabels:
            app: gs-mgmt-tai
    template:
        metadata:
            labels:
                app: gs-mgmt-tai
        spec:
            serviceAccountName: gs-mgmt
            initContainers:
            - name: wait-prep
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=complete', 'job/prep-gs-mgmt']
            containers:
            - name: tai
              image: docker.io/gs-test/gs-mgmt-debug:latest
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', 'gssouthd-tai --taish-server $TAISH_SERVER_SERVICE_HOST:$TAISH_SERVER_SERVICE_PORT --verbose']
              volumeMounts:
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
            volumes:
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: gs-mgmt-onlp
    labels:
        app: gs-mgmt
spec:
    selector:
        matchLabels:
            app: gs-mgmt-onlp
    template:
        metadata:
            labels:
                app: gs-mgmt-onlp
        spec:
            serviceAccountName: gs-mgmt
            initContainers:
            - name: wait-prep
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=complete', 'job/prep-gs-mgmt']
            containers:
            - name: onlp
              image: docker.io/gs-test/gs-mgmt-debug:latest
              imagePullPolicy: IfNotPresent
              command: ['gssouthd-onlp']
              volumeMounts:
              - name: dev
                mountPath: /dev
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
              - name: onl
                mountPath: /etc/onl/
              - name: host-lib
                mountPath: /lib/x86_64-linux-gnu/libonlp-platform.so
              - name: host-i2c-lib
                mountPath: /lib/x86_64-linux-gnu/libi2c.so.0
              securityContext:
                privileged: true
                capabilities:
                  add:
                  - IPC_OWNER
                  - IPC_LOCK
            volumes:
            - name: dev
              hostPath:
                  path: /dev
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo
            - name: onl
              hostPath:
                path: /etc/onl
            - name: host-lib
              hostPath:
                path: /lib/x86_64-linux-gnu/libonlp-platform.so
            - name: host-i2c-lib
              hostPath:
                path: /usr/lib/x86_64-linux-gnu/libi2c.so.0.1.1

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: gs-mgmt-sonic
    labels:
        app: gs-mgmt
spec:
    selector:
        matchLabels:
            app: gs-mgmt-sonic
    template:
        metadata:
            labels:
                app: gs-mgmt-sonic
        spec:
            serviceAccountName: gs-mgmt-sonic-svc
            initContainers:
            - name: wait-prep
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=complete', 'job/prep-gs-mgmt']
            containers:
            - name: sonic
              image: docker.io/gs-test/gs-mgmt-debug:latest
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', 'sleep 10 && /usr/local/bin/gssouthd-sonic -v']
              volumeMounts:
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
            volumes:
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config
