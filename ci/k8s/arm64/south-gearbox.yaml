apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: gs-mgmt-gearbox
    labels:
        app: gs-mgmt
spec:
    selector:
        matchLabels:
            app: gs-mgmt-gearbox
    template:
        metadata:
            labels:
                app: gs-mgmt-gearbox
        spec:
            serviceAccountName: gs-mgmt
            initContainers:
            - name: wait-prep
              image: docker.io/library/kubectl:latest-arm64
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=complete', 'job/prep-gs-mgmt']
            - name: wait-onlp
              image: docker.io/library/kubectl:latest-arm64
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', "kubectl wait --for=condition=ready pods/$(kubectl get pods -l app=gs-mgmt-onlp -o jsonpath='{.items[0].metadata.name}')"]
            containers:
            - name: tai
              image: docker.io/gs-test/gs-mgmt-south-gearbox:latest-arm64
              imagePullPolicy: IfNotPresent
              command: ['gssouthd-gearbox']
              args: ['--taish-server', "$(TAI_GEARBOX_SERVICE_HOST):$(TAI_GEARBOX_SERVICE_PORT)", "--verbose"]
              volumeMounts:
              - name: shm
                mountPath: /dev/shm
              - name: sysrepo
                mountPath: /var/lib/sysrepo
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: liveness-port
                failureThreshold: 1
                periodSeconds: 10
              startupProbe:
                httpGet:
                  path: /healthz
                  port: liveness-port
                failureThreshold: 30
                periodSeconds: 10
              ports:
              - name: liveness-port
                containerPort: 8080
            volumes:
            - name: shm
              hostPath:
                  path: /dev/shm
            - name: sysrepo
              hostPath:
                  path: /var/lib/sysrepo
